AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Product CRUD Apis

Globals:
  Function:
    Tracing: Active
    Tags:
      app: product-api
      project: phoenix
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'POST, GET, DELETE'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'"
      MaxAge: "'86400'"

Resources:
  ##########################################################################
  #   Dynamo DB Product Table                                              #
  ##########################################################################
  ProductTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GS1-PK
          AttributeType: S
        - AttributeName: GS1-SK
          AttributeType: S
        - AttributeName: GS2-PK
          AttributeType: S
        - AttributeName: GS2-SK
          AttributeType: S
        - AttributeName: LS1-SK
          AttributeType: S
      LocalSecondaryIndexes:
        - IndexName: LS1
          KeySchema:
            - AttributeName: PK
              KeyType: HASH
            - AttributeName: LS1-SK
              KeyType: RANGE
          Projection:
            ProjectionType:  ALL
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GS1-PK
              KeyType: HASH
            - AttributeName: GS1-SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: GSI2
          KeySchema:
            - AttributeName: GS2-PK
              KeyType: HASH
            - AttributeName: GS2-SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: "ProductTable"

##########################################################################
#   Lambda FUNCTIONS for Product Management                              #
##########################################################################
  CreateProductLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: create-product.handler
      Runtime: nodejs20.x
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: POST
      Policies:
        - "Version": "2012-10-17"
          Statement:
            - Action:
                - dynamodb:PutItem
              Effect: Allow
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductTable}

  GetProductLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: get-product.handler
      Runtime: nodejs20.x
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/{id}
            Method: GET
      Policies:
        - "Version": "2012-10-17"
          Statement:
            - Action:
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:Scan
              Effect: Allow
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductTable}

  GetProductsLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: get-products.handler
      Runtime: nodejs20.x
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: GET
      Policies:
        - "Version": "2012-10-17"
          Statement:
            - Action:
                - dynamodb:Scan
              Effect: Allow
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductTable}

  DeleteProductLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: delete-products.handler
      Runtime: nodejs20.x
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/{id}
            Method: DELETE
      Policies:
        - "Version": "2012-10-17"
          Statement:
            - Action:
                - dynamodb:DeleteItem
              Effect: Allow
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductTable}

  CreateProductImagesLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: create-product-images.handler
      Runtime: nodejs20.x
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/images
            Method: POST
      Policies:
        - "Version": "2012-10-17"
          Statement:
            - Action:
                - dynamodb:PutItem
              Effect: Allow
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductTable}

  CreateCategoryLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: create-category.handler
      Runtime: nodejs20.x
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/category
            Method: POST
      Policies:
        - "Version": "2012-10-17"
          Statement:
            - Action:
                - dynamodb:PutItem
              Effect: Allow
              Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ProductTable}

##########################################################################
#   STEP FUNCTION                                                        #
##########################################################################
  StateMachineExpressSync:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: src/stateMachine.asl.json
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "cloudwatch:*"
                - "logs:*"
              Resource: "*"
      Type: EXPRESS
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
        IncludeExecutionData: false
        Level: 'ALL'

  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ "/", [ "stepfunctions", StateMachineExpressSync]]

##########################################################################
#   HTTP API                                                             #
##########################################################################
  HttpApiSF:
    Type: AWS::Serverless::HttpApi
    Properties:
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: 'create-product-sf.yaml'
##########################################################################
#   Roles                                                               #
##########################################################################
  HttpApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AllowSFNExec
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "states:StartSyncExecution"
                Resource: !GetAtt StateMachineExpressSync.Arn

##########################################################################
#   Outputs                                                              #
##########################################################################
Outputs:
  CreateProductSFApi:
    Description: "Sync WF API endpoint"
    Value: !Sub "https://${HttpApiSF}.execute-api.${AWS::Region}.amazonaws.com"