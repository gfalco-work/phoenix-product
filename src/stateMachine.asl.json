{
  "Comment": "Adding Product Info and Images to the Database",
  "StartAt": "Parallel",
  "States": {
    "Parallel": {
      "Type": "Parallel",
      "Next": "Merge Input",
      "Branches": [
        {
          "StartAt": "Create Product Details",
          "States": {
            "Create Product Details": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:eu-west-2:730335265680:function:product-api-CreateProductLambdaFunction-eU2sFB6JUDs9:$LATEST",
              "InputPath": "$.input.product",
              "ResultPath": "$.body",
              "OutputPath": "$.body",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true,
              "Comment": "Add a product in the Product Table and return the output ProductId"
            }
          }
        },
        {
          "StartAt": "Resize Images",
          "States": {
            "Resize Images": {
              "Type": "Task",
              "Resource": "arn:aws:lambda:eu-west-2:730335265680:function:media-api-ResizeImageLambdaFunction-TO5UMG59XQLW:$LATEST",
              "InputPath": "$.input.image",
              "ResultPath": "$.body",
              "OutputPath": "$.body",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true,
              "Comment": "Resize the product image in S3 and creates 3 more"
            }
          }
        }
      ]
    },
    "Merge Input": {
      "Type": "Pass",
      "Next": "Update Product Images",
      "Parameters": {
        "productId.$": "$[0].body.productId",
        "productImage.$": "$[1].body.image",
        "otherProductImages.$": "$[1].body.resizedImages"
      }
    },
    "Update Product Images": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:eu-west-2:730335265680:function:product-api-CreateProductImagesLambdaFunction-bRp7TOGbuNWC:$LATEST",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "End": true,
      "Comment": "It receives as input the product id and the images and it stores product images records with partition key: productId"
    }
  }
}